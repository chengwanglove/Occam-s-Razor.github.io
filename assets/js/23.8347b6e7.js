(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{373:function(t,s,a){"use strict";a.r(s);var r=a(41),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器安全"}},[t._v("#")]),t._v(" 浏览器安全")]),t._v(" "),a("h2",{attrs:{id:"为什么-xmlhttprequest-不能跨域请求资源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么-xmlhttprequest-不能跨域请求资源"}},[t._v("#")]),t._v(" 为什么 XMLHttpRequest 不能跨域请求资源")]),t._v(" "),a("ul",[a("li",[t._v("浏览器安全分为 网络安全 浏览器页面安全 浏览器系统安全")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("在没有安全保障的 Web 世界中，我们是没有隐私的，因此需要安全策略来保障我 们的隐私和数据的安全")])]),t._v(" "),a("li",[a("p",[t._v("同源策略 如果两个 URL 的协议、域名和端口都相同")])])]),t._v(" "),a("h3",{attrs:{id:"同源策略主要表现在-dom、web-数据和网络这三个层面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源策略主要表现在-dom、web-数据和网络这三个层面"}},[t._v("#")]),t._v(" 同源策略主要表现在 DOM、Web 数据和网络这三个层面")]),t._v(" "),a("h4",{attrs:{id:"dom-方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-方面"}},[t._v("#")]),t._v(" dom 方面")]),t._v(" "),a("ul",[a("li",[t._v("同源页面可以进行操作 dom")])]),t._v(" "),a("h4",{attrs:{id:"数据方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据方面"}},[t._v("#")]),t._v(" 数据方面")]),t._v(" "),a("ul",[a("li",[t._v("同源策略限制了不同源的站点读取当前站点的 Cookie、IndexDB、 LocalStorage")])]),t._v(" "),a("h4",{attrs:{id:"网络方面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络方面"}},[t._v("#")]),t._v(" 网络方面")]),t._v(" "),a("ul",[a("li",[t._v("同源策略限制了通过 XMLHttpRequest 等方式将站点的数据发送给不 同源的站点")])]),t._v(" "),a("h3",{attrs:{id:"安全和便利性的权衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安全和便利性的权衡"}},[t._v("#")]),t._v(" 安全和便利性的权衡")]),t._v(" "),a("ul",[a("li",[t._v("页面中可以嵌入第三方资源 注意：sameSite chrome 的限制")])]),t._v(" "),a("ul",[a("li",[t._v("跨域资源共享和跨文档消息机制 window.postMessage")])]),t._v(" "),a("h3",{attrs:{id:"前端跨域的处理方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端跨域的处理方式"}},[t._v("#")]),t._v(" 前端跨域的处理方式")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg2NDAzMjE5NQ==&mid=2247484197&idx=1&sn=e7af3acd85ef78875195098b2d9ea931&scene=21#wechat_redirect",target:"_blank",rel:"noopener noreferrer"}},[t._v("九种跨域方式处理"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"跨站脚本攻击-xss-为什么-cookie-中有-httponly-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跨站脚本攻击-xss-为什么-cookie-中有-httponly-属性"}},[t._v("#")]),t._v(" 跨站脚本攻击(XSS):为什么 Cookie 中有 HttpOnly 属性")]),t._v(" "),a("h3",{attrs:{id:"什么是-xss-攻击-cross-site-scripting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-xss-攻击-cross-site-scripting"}},[t._v("#")]),t._v(" 什么是 XSS 攻击？ cross site scripting")]),t._v(" "),a("ul",[a("li",[t._v("存储型 xss")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("反射型 xss Web 服务器不会存储反射型 XSS 攻击的恶意脚本，这是和存储型 XSS 攻击不同的地方")])]),t._v(" "),a("li",[a("p",[t._v("基于 DOM 的 XSS 攻击")])])]),t._v(" "),a("h3",{attrs:{id:"如何防止-xss-攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何防止-xss-攻击"}},[t._v("#")]),t._v(" 如何防止 xss 攻击")]),t._v(" "),a("ul",[a("li",[t._v("服务器对输入脚本进行过滤或转码")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("充分利用 CSP")])]),t._v(" "),a("li",[a("p",[t._v("使用 HttpOnly 属性")])])]),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[t._v("XSS 攻击就是黑客往页面中注入恶意脚本，然后将页面的一些重要数据上传到恶意服务 器。常见的三种 XSS 攻击模式是存储型 XSS 攻击、反射型 XSS 攻击和基于 DOM 的 XSS 攻击。这三种攻击方式的共同点是都需要往用户的页面中注入恶意脚本，然后再通过恶意脚本将用 户数据上传到黑客的恶意服务器上。而三者的不同点在于注入的方式不一样，有通过服务器 漏洞来进行注入的，还有在客户端直接注入的。针对这些 XSS 攻击，主要有三种防范策略，第一种是通过服务器对输入的内容进行过滤或 者转码，第二种是充分利用好 CSP，第三种是使用 HttpOnly 来保护重要的 Cookie 信 息。")])]),t._v(" "),a("h2",{attrs:{id:"csrf-攻击-陌生链接不要随便点-跨站请求伪造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-攻击-陌生链接不要随便点-跨站请求伪造"}},[t._v("#")]),t._v(" CSRF 攻击:陌生链接不要随便点 跨站请求伪造")]),t._v(" "),a("h3",{attrs:{id:"必须具备的条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#必须具备的条件"}},[t._v("#")]),t._v(" 必须具备的条件")]),t._v(" "),a("ul",[a("li",[t._v("第一个，目标站点一定要有 CSRF 漏洞; 第二个，用户要登录过目标站点，并且在浏览器上保持有该站点的登录状态; 第三个，需要用户打开一个第三方站点，可以是黑客的站点，也可以是一些论坛")])]),t._v(" "),a("h3",{attrs:{id:"如何防止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何防止"}},[t._v("#")]),t._v(" 如何防止")]),t._v(" "),a("ul",[a("li",[t._v("充分利用好 Cookie 的 SameSite 属性")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("验证请求的来源站点")])]),t._v(" "),a("li",[a("p",[t._v("CSRF Token")])])]),t._v(" "),a("h2",{attrs:{id:"浏览器沙盒"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器沙盒"}},[t._v("#")]),t._v(" 浏览器沙盒")]),t._v(" "),a("p",[a("img",{attrs:{src:"/Occam-s-Razor.github.io/sandChrome.jpg",alt:"create"}})])])}),[],!1,null,null,null);s.default=e.exports}}]);