(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{356:function(t,a,s){"use strict";s.r(a);var n=s(41),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"栈和队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈和队列"}},[t._v("#")]),t._v(" 栈和队列")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("方法栈\nclass Stack{\n    constructor() {\n        this.data = [];\n        this.top = 0;\n    }\n    add(item) {\n        this.data[this.top++] = item;\n    }\n    clear () {\n        this.data = [];\n        this.top = 0;\n    }\n    pop() {\n        if (this.top == 0) {\n            return null;\n        }\n        return this.data[--this.top];\n    }\n    getLength() {\n        return this.top;\n    }\n}\n")])])]),s("h2",{attrs:{id:"队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),s("ul",[s("li",[t._v("先进先出")])]),t._v(" "),s("h2",{attrs:{id:"汉明距离"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#汉明距离"}},[t._v("#")]),t._v(" 汉明距离")]),t._v(" "),s("ul",[s("li",[t._v("两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目给出两个整数 x 和 y，计算它们之间的汉明距离")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);